{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Figure.svelte",
    "Header.svelte",
    "Notification.svelte",
    "Popup.svelte",
    "Word.svelte",
    "WrongLetter.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Header from './components/Header.svelte';\n  import Figure from './components/Figure.svelte';\n  import Notification from './components/Notification.svelte';\n  import Popup from './components/Popup.svelte';\n  import Word from './components/Word.svelte';\n  import WrongLetter from './components/WrongLetter.svelte';\n  import { store, initial_state } from './store';\n  import { onMount } from 'svelte';\n  import { isEqual, getWords } from './helper';\n\n  $: selectedWord = $store.selectedWord;\n  $: correctLetters = $store.correctLetters;\n  $: wrongLetters = $store.wrongLetters;\n  $: showNotification = $store.showNotification;\n  $: playable = $store.playable;\n  $: showPopup = $store.showPopup;\n  $: message = $store.message;\n  $: word = $store.word;\n\n  const chooseWord = () => {\n    store.update(() => initial_state);\n    const selectedWord = getWords[\n      Math.floor(Math.random() * getWords.length)\n    ].toUpperCase();\n    const playable = true;\n    store.update(() => ({ ...initial_state, selectedWord, playable }));\n  };\n\n  const nextState = (letter) => (state) => {\n    if (letter.length === 1 && /^[a-z]+$/i.test(letter)) {\n      if (state.selectedWord.includes(letter)) {\n        if (!state.correctLetters.includes(letter)) {\n          let correctLetters = [...state.correctLetters, letter];\n          if (isEqual(state.selectedWord, correctLetters)) {\n            return {\n              ...state,\n              correctLetters: correctLetters,\n              playable: false,\n              showPopup: true,\n              message: 'Congratulations! You won! ðŸ˜ƒ',\n              word: '',\n            };\n          } else {\n            return {\n              ...state,\n              correctLetters: correctLetters,\n            };\n          }\n        } else {\n          showNotification = true;\n          return {\n            ...state,\n            showNotification: showNotification,\n          };\n        }\n      } else {\n        if (!state.wrongLetters.includes(letter)) {\n          let wrongLetters = [...state.wrongLetters, letter];\n          if (wrongLetters.length === 6) {\n            return {\n              ...state,\n              wrongLetters: wrongLetters,\n              playable: false,\n              showPopup: true,\n              message: 'Unfortunately you lost. ðŸ˜•',\n              word: `the word was ${selectedWord}`,\n            };\n          } else {\n            return {\n              ...state,\n              wrongLetters: wrongLetters,\n            };\n          }\n        } else {\n          showNotification = true;\n          return {\n            ...state,\n            showNotification: showNotification,\n          };\n        }\n      }\n    } else {\n      return {\n        ...state,\n        state,\n      };\n    }\n  };\n\n  const onChooseLetter = (letter) => {\n    if (playable) store.update(nextState(letter));\n  };\n  onMount(chooseWord);\n</script>\n\n<style>\n  main {\n    background-color: #34495e;\n    color: #fff;\n    font-family: Arial, Helvetica, sans-serif;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 80vh;\n    margin: 0;\n    overflow: hidden;\n  }\n\n  .game-container {\n    padding: 20px 30px;\n    position: relative;\n    margin: auto;\n    height: 350px;\n    width: 450px;\n  }\n</style>\n\n<svelte:body on:keydown={(e) => onChooseLetter(e.key.toUpperCase())} />\n\n<main>\n  <Header />\n  <div class=\"game-container\">\n    <Figure {wrongLetters} />\n    <Word {selectedWord} {correctLetters} />\n    <WrongLetter {wrongLetters} />\n  </div>\n  <Popup {showPopup} {message} {word} />\n  <Notification {showNotification} />\n</main>\n",
    "<script>\r\n  export let wrongLetters;\r\n\r\n  $: errors = wrongLetters.length;\r\n  \r\n</script>\r\n\r\n<style>\r\n  .figure-container {\r\n    fill: transparent;\r\n    stroke: #fff;\r\n    stroke-width: 4px;\r\n    stroke-linecap: round;\r\n  }\r\n\r\n  .figure-part {\r\n    display: block;\r\n  }\r\n</style>\r\n\r\n<svg height=\"250\" width=\"200\" class=\"figure-container\">\r\n  <!-- Rod -->\r\n  <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n  <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n  <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n  <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n  <!-- Head -->\r\n  {#if errors > 0}\r\n    <circle cx=\"140\" cy=\"70\" r=\"20\" class=\"figure-part\" />\r\n  {/if}\r\n  <!-- Body -->\r\n  {#if errors > 1}\r\n    <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" class=\"figure-part\" />\r\n  {/if}\r\n  <!-- Arms -->\r\n  {#if errors > 2}\r\n    <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" class=\"figure-part\" />\r\n  {/if}\r\n  {#if errors > 3}\r\n    <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" class=\"figure-part\" />\r\n  {/if}\r\n  <!-- Legs -->\r\n  {#if errors > 4}\r\n    <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" class=\"figure-part\" />\r\n  {/if}\r\n  {#if errors > 5}\r\n    <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" class=\"figure-part\" />\r\n  {/if}\r\n</svg>\r\n",
    "<script>\r\n\r\n</script>\r\n\r\n<style>\r\n\r\nh1 {\r\n  margin: 20px 0 0;\r\n}\r\n</style>\r\n\r\n<h1>Hangman</h1>\r\n<p>Find the hidden word - Enter a letter</p>\r\n",
    "<script>\r\n  import { store } from '../store';\r\n  import { onMount } from 'svelte';\r\n\r\n  export let showNotification;\r\n\r\n  $: visible = showNotification;\r\n\r\n  const nextState = () => (state) => {\r\n    let notif = false;\r\n    return {\r\n      ...state,\r\n      showNotification: notif,\r\n    };\r\n  };\r\n  const handleNotification = () => {\r\n    if (showNotification) store.update(nextState());\r\n  };\r\n\r\n  function update() {\r\n    visible = false;\r\n    handleNotification();\r\n    setTimeout(update, 2000);\r\n  }\r\n\r\n  onMount(() => {\r\n    update();\r\n  });\r\n</script>\r\n\r\n<style>\r\n  .notification-container {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    border-radius: 10px 10px 0 0;\r\n    padding: 15px 20px;\r\n    position: absolute;\r\n    bottom: -50px;\r\n    transition: transform 0.3s ease-in-out;\r\n  }\r\n\r\n  .notification-container p {\r\n    margin: 0;\r\n  }\r\n\r\n  .showNotification {\r\n    transform: translateY(-50px);\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"notification-container\"\r\n  id=\"notification-container\"\r\n  class:showNotification={visible}>\r\n  <p>You have already entered this letter</p>\r\n</div>\r\n",
    "<script>\r\n  import { getWords } from '../helper';\r\n  import { store, initial_state } from '../store';\r\n  export let showPopup;\r\n  export let message;\r\n  export let word;\r\n\r\n  $: showPopup = $store.showPopup;\r\n  $: message = $store.message;\r\n  $: word = $store.word;\r\n\r\n  const handleClick = () => {\r\n    store.update(() => initial_state);\r\n    const selectedWord = getWords[\r\n      Math.floor(Math.random() * getWords.length)\r\n    ].toUpperCase();\r\n    const playable = true;\r\n    store.update(() => ({ ...initial_state, selectedWord, playable }));\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .popup {\r\n    background: #2980b9;\r\n    border-radius: 5px;\r\n    box-shadow: 0 15px 10px 3px rgba(0, 0, 0, 0.1);\r\n    padding: 20px;\r\n    text-align: center;\r\n  }\r\n\r\n  .popup button {\r\n    cursor: pointer;\r\n    background-color: #fff;\r\n    color: #2980b9;\r\n    border: 0;\r\n    margin-top: 20px;\r\n    padding: 12px 20px;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .popup button:active {\r\n    transform: scale(0.98);\r\n  }\r\n\r\n  .popup button:focus {\r\n    outline: 0;\r\n  }\r\n\r\n  .popup-container {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    display: none;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .showPopup {\r\n    display: flex;\r\n  }\r\n</style>\r\n\r\n<div class=\"popup-container\" class:showPopup>\r\n  <div class=\"popup\">\r\n    <h2>{message}</h2>\r\n    <h3>{word}</h3>\r\n    <button id=\"play-button\" on:click={handleClick}>Play Again</button>\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  export let selectedWord;\r\n  export let correctLetters;\r\n\r\n  $: maskedWord = maskWord(selectedWord, correctLetters);\r\n\r\n  const maskWord = (word, letters) =>\r\n    Array.from(word)\r\n      .map((letter) => (letters.includes(letter) ? letter : ' - '))\r\n      .join('');\r\n</script>\r\n\r\n<style>\r\n  .word {\r\n    position: absolute;\r\n    bottom: 10px;\r\n    left: 50%;\r\n    height: 50px;\r\n    width: 250px;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  .letter {\r\n    font-size: 30px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0 3px;\r\n    height: 50px;\r\n    width: 500px;\r\n  }\r\n</style>\r\n\r\n<div class=\"word\" id=\"word\"><span class=\"letter\">{maskedWord}</span></div>\r\n",
    "<script>\r\n  export let wrongLetters;\r\n  $: letters = wrongLetters.reduce(\r\n    (prev, curr) => (prev === null ? [curr] : [prev + ',' + curr]),\r\n    null\r\n  );\r\n</script>\r\n\r\n<style>\r\n  .wrong-letters-container {\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: right;\r\n  }\r\n\r\n  .wrong-letters-container p {\r\n    margin: 0 0 5px;\r\n  }\r\n\r\n  .wrong-letters-container span {\r\n    font-size: 24px;\r\n  }\r\n</style>\r\n\r\n<div class=\"wrong-letters-container\">\r\n  <div id=\"wrong-letters\">\r\n    {#if wrongLetters.length > 0}\r\n      <p>Wrong</p>\r\n      <span>{letters}</span>      \r\n    {/if}\r\n  </div>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "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"
}